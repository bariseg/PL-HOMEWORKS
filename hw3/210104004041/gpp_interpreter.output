Terminals which are not used

   KW_NIL
   KW_LIST
   KW_APPEND
   KW_CONCAT
   KW_EXIT
   KW_LOAD
   KW_PRINT
   KW_TRUE
   KW_FALSE
   OP_COMMA
   VALUEI
   COMMENT


State 59 conflicts: 4 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: input

    2 input: expression_list

    3 expression: OP_OP OP_PLUS expression expression OP_CP
    4           | OP_OP OP_MINUS expression expression OP_CP
    5           | OP_OP OP_MULT expression expression OP_CP
    6           | OP_OP OP_DIV expression expression OP_CP
    7           | OP_OP KW_SET IDENTIFIER expression OP_CP
    8           | IDENTIFIER
    9           | VALUEF
   10           | OP_OP KW_DEFFUN IDENTIFIER OP_OP identifier_list OP_CP expression_list OP_CP
   11           | OP_OP IDENTIFIER expression_list OP_CP
   12           | OP_OP KW_IF expression_boolean expression_list OP_CP
   13           | OP_OP KW_IF expression_boolean expression_list expression_list OP_CP
   14           | OP_OP KW_WHILE expression_boolean expression_list OP_CP
   15           | OP_OP KW_FOR OP_OP IDENTIFIER expression expression OP_CP expression_list OP_CP
   16           | OP_OP KW_DEFVAR IDENTIFIER expression OP_CP

   17 expression_list: expression_list expression
   18                | expression

   19 expression_boolean: OP_OP KW_AND expression expression OP_CP
   20                   | OP_OP KW_OR expression expression OP_CP
   21                   | OP_OP KW_NOT expression OP_CP
   22                   | OP_OP KW_EQUAL expression expression OP_CP
   23                   | OP_OP KW_LESS expression expression OP_CP

   24 identifier_list: identifier_list IDENTIFIER
   25                | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
KW_AND (258) 19
KW_OR (259) 20
KW_NOT (260) 21
KW_EQUAL (261) 22
KW_LESS (262) 23
KW_NIL (263)
KW_LIST (264)
KW_APPEND (265)
KW_CONCAT (266)
KW_SET (267) 7
KW_DEFFUN (268) 10
KW_FOR (269) 15
KW_IF (270) 12 13
KW_EXIT (271)
KW_LOAD (272)
KW_PRINT (273)
KW_TRUE (274)
KW_FALSE (275)
KW_WHILE (276) 14
KW_DEFVAR (277) 16
OP_PLUS (278) 3
OP_MINUS (279) 4
OP_DIV (280) 6
OP_MULT (281) 5
OP_OP (282) 3 4 5 6 7 10 11 12 13 14 15 16 19 20 21 22 23
OP_CP (283) 3 4 5 6 7 10 11 12 13 14 15 16 19 20 21 22 23
OP_COMMA (284)
IDENTIFIER (285) 7 8 10 11 15 16 24 25
VALUEF (286) 9
VALUEI (287)
COMMENT (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
start (35)
    on left: 1, on right: 0
input (36)
    on left: 2, on right: 1
expression (37)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 3 4 5 6
    7 15 16 17 18 19 20 21 22 23
expression_list (38)
    on left: 17 18, on right: 2 10 11 12 13 14 15 17
expression_boolean (39)
    on left: 19 20 21 22 23, on right: 12 13 14
identifier_list (40)
    on left: 24 25, on right: 10 24


state 0

    0 $accept: . start $end

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    start            go to state 4
    input            go to state 5
    expression       go to state 6
    expression_list  go to state 7


state 1

    3 expression: OP_OP . OP_PLUS expression expression OP_CP
    4           | OP_OP . OP_MINUS expression expression OP_CP
    5           | OP_OP . OP_MULT expression expression OP_CP
    6           | OP_OP . OP_DIV expression expression OP_CP
    7           | OP_OP . KW_SET IDENTIFIER expression OP_CP
   10           | OP_OP . KW_DEFFUN IDENTIFIER OP_OP identifier_list OP_CP expression_list OP_CP
   11           | OP_OP . IDENTIFIER expression_list OP_CP
   12           | OP_OP . KW_IF expression_boolean expression_list OP_CP
   13           | OP_OP . KW_IF expression_boolean expression_list expression_list OP_CP
   14           | OP_OP . KW_WHILE expression_boolean expression_list OP_CP
   15           | OP_OP . KW_FOR OP_OP IDENTIFIER expression expression OP_CP expression_list OP_CP
   16           | OP_OP . KW_DEFVAR IDENTIFIER expression OP_CP

    KW_SET      shift, and go to state 8
    KW_DEFFUN   shift, and go to state 9
    KW_FOR      shift, and go to state 10
    KW_IF       shift, and go to state 11
    KW_WHILE    shift, and go to state 12
    KW_DEFVAR   shift, and go to state 13
    OP_PLUS     shift, and go to state 14
    OP_MINUS    shift, and go to state 15
    OP_DIV      shift, and go to state 16
    OP_MULT     shift, and go to state 17
    IDENTIFIER  shift, and go to state 18


state 2

    8 expression: IDENTIFIER .

    $default  reduce using rule 8 (expression)


state 3

    9 expression: VALUEF .

    $default  reduce using rule 9 (expression)


state 4

    0 $accept: start . $end

    $end  shift, and go to state 19


state 5

    1 start: input .

    $default  reduce using rule 1 (start)


state 6

   18 expression_list: expression .

    $default  reduce using rule 18 (expression_list)


state 7

    2 input: expression_list .
   17 expression_list: expression_list . expression

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    $default  reduce using rule 2 (input)

    expression  go to state 20


state 8

    7 expression: OP_OP KW_SET . IDENTIFIER expression OP_CP

    IDENTIFIER  shift, and go to state 21


state 9

   10 expression: OP_OP KW_DEFFUN . IDENTIFIER OP_OP identifier_list OP_CP expression_list OP_CP

    IDENTIFIER  shift, and go to state 22


state 10

   15 expression: OP_OP KW_FOR . OP_OP IDENTIFIER expression expression OP_CP expression_list OP_CP

    OP_OP  shift, and go to state 23


state 11

   12 expression: OP_OP KW_IF . expression_boolean expression_list OP_CP
   13           | OP_OP KW_IF . expression_boolean expression_list expression_list OP_CP

    OP_OP  shift, and go to state 24

    expression_boolean  go to state 25


state 12

   14 expression: OP_OP KW_WHILE . expression_boolean expression_list OP_CP

    OP_OP  shift, and go to state 24

    expression_boolean  go to state 26


state 13

   16 expression: OP_OP KW_DEFVAR . IDENTIFIER expression OP_CP

    IDENTIFIER  shift, and go to state 27


state 14

    3 expression: OP_OP OP_PLUS . expression expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 28


state 15

    4 expression: OP_OP OP_MINUS . expression expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 29


state 16

    6 expression: OP_OP OP_DIV . expression expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 30


state 17

    5 expression: OP_OP OP_MULT . expression expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 31


state 18

   11 expression: OP_OP IDENTIFIER . expression_list OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression       go to state 6
    expression_list  go to state 32


state 19

    0 $accept: start $end .

    $default  accept


state 20

   17 expression_list: expression_list expression .

    $default  reduce using rule 17 (expression_list)


state 21

    7 expression: OP_OP KW_SET IDENTIFIER . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 33


state 22

   10 expression: OP_OP KW_DEFFUN IDENTIFIER . OP_OP identifier_list OP_CP expression_list OP_CP

    OP_OP  shift, and go to state 34


state 23

   15 expression: OP_OP KW_FOR OP_OP . IDENTIFIER expression expression OP_CP expression_list OP_CP

    IDENTIFIER  shift, and go to state 35


state 24

   19 expression_boolean: OP_OP . KW_AND expression expression OP_CP
   20                   | OP_OP . KW_OR expression expression OP_CP
   21                   | OP_OP . KW_NOT expression OP_CP
   22                   | OP_OP . KW_EQUAL expression expression OP_CP
   23                   | OP_OP . KW_LESS expression expression OP_CP

    KW_AND    shift, and go to state 36
    KW_OR     shift, and go to state 37
    KW_NOT    shift, and go to state 38
    KW_EQUAL  shift, and go to state 39
    KW_LESS   shift, and go to state 40


state 25

   12 expression: OP_OP KW_IF expression_boolean . expression_list OP_CP
   13           | OP_OP KW_IF expression_boolean . expression_list expression_list OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression       go to state 6
    expression_list  go to state 41


state 26

   14 expression: OP_OP KW_WHILE expression_boolean . expression_list OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression       go to state 6
    expression_list  go to state 42


state 27

   16 expression: OP_OP KW_DEFVAR IDENTIFIER . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 43


state 28

    3 expression: OP_OP OP_PLUS expression . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 44


state 29

    4 expression: OP_OP OP_MINUS expression . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 45


state 30

    6 expression: OP_OP OP_DIV expression . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 46


state 31

    5 expression: OP_OP OP_MULT expression . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 47


state 32

   11 expression: OP_OP IDENTIFIER expression_list . OP_CP
   17 expression_list: expression_list . expression

    OP_OP       shift, and go to state 1
    OP_CP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 20


state 33

    7 expression: OP_OP KW_SET IDENTIFIER expression . OP_CP

    OP_CP  shift, and go to state 49


state 34

   10 expression: OP_OP KW_DEFFUN IDENTIFIER OP_OP . identifier_list OP_CP expression_list OP_CP

    IDENTIFIER  shift, and go to state 50

    identifier_list  go to state 51


state 35

   15 expression: OP_OP KW_FOR OP_OP IDENTIFIER . expression expression OP_CP expression_list OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 52


state 36

   19 expression_boolean: OP_OP KW_AND . expression expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 53


state 37

   20 expression_boolean: OP_OP KW_OR . expression expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 54


state 38

   21 expression_boolean: OP_OP KW_NOT . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 55


state 39

   22 expression_boolean: OP_OP KW_EQUAL . expression expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 56


state 40

   23 expression_boolean: OP_OP KW_LESS . expression expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 57


state 41

   12 expression: OP_OP KW_IF expression_boolean expression_list . OP_CP
   13           | OP_OP KW_IF expression_boolean expression_list . expression_list OP_CP
   17 expression_list: expression_list . expression

    OP_OP       shift, and go to state 1
    OP_CP       shift, and go to state 58
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression       go to state 59
    expression_list  go to state 60


state 42

   14 expression: OP_OP KW_WHILE expression_boolean expression_list . OP_CP
   17 expression_list: expression_list . expression

    OP_OP       shift, and go to state 1
    OP_CP       shift, and go to state 61
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 20


state 43

   16 expression: OP_OP KW_DEFVAR IDENTIFIER expression . OP_CP

    OP_CP  shift, and go to state 62


state 44

    3 expression: OP_OP OP_PLUS expression expression . OP_CP

    OP_CP  shift, and go to state 63


state 45

    4 expression: OP_OP OP_MINUS expression expression . OP_CP

    OP_CP  shift, and go to state 64


state 46

    6 expression: OP_OP OP_DIV expression expression . OP_CP

    OP_CP  shift, and go to state 65


state 47

    5 expression: OP_OP OP_MULT expression expression . OP_CP

    OP_CP  shift, and go to state 66


state 48

   11 expression: OP_OP IDENTIFIER expression_list OP_CP .

    $default  reduce using rule 11 (expression)


state 49

    7 expression: OP_OP KW_SET IDENTIFIER expression OP_CP .

    $default  reduce using rule 7 (expression)


state 50

   25 identifier_list: IDENTIFIER .

    $default  reduce using rule 25 (identifier_list)


state 51

   10 expression: OP_OP KW_DEFFUN IDENTIFIER OP_OP identifier_list . OP_CP expression_list OP_CP
   24 identifier_list: identifier_list . IDENTIFIER

    OP_CP       shift, and go to state 67
    IDENTIFIER  shift, and go to state 68


state 52

   15 expression: OP_OP KW_FOR OP_OP IDENTIFIER expression . expression OP_CP expression_list OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 69


state 53

   19 expression_boolean: OP_OP KW_AND expression . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 70


state 54

   20 expression_boolean: OP_OP KW_OR expression . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 71


state 55

   21 expression_boolean: OP_OP KW_NOT expression . OP_CP

    OP_CP  shift, and go to state 72


state 56

   22 expression_boolean: OP_OP KW_EQUAL expression . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 73


state 57

   23 expression_boolean: OP_OP KW_LESS expression . expression OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 74


state 58

   12 expression: OP_OP KW_IF expression_boolean expression_list OP_CP .

    $default  reduce using rule 12 (expression)


state 59

   17 expression_list: expression_list expression .
   18                | expression .

    OP_OP       reduce using rule 17 (expression_list)
    OP_OP       [reduce using rule 18 (expression_list)]
    OP_CP       reduce using rule 17 (expression_list)
    OP_CP       [reduce using rule 18 (expression_list)]
    IDENTIFIER  reduce using rule 17 (expression_list)
    IDENTIFIER  [reduce using rule 18 (expression_list)]
    VALUEF      reduce using rule 17 (expression_list)
    VALUEF      [reduce using rule 18 (expression_list)]
    $default    reduce using rule 17 (expression_list)


state 60

   13 expression: OP_OP KW_IF expression_boolean expression_list expression_list . OP_CP
   17 expression_list: expression_list . expression

    OP_OP       shift, and go to state 1
    OP_CP       shift, and go to state 75
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 20


state 61

   14 expression: OP_OP KW_WHILE expression_boolean expression_list OP_CP .

    $default  reduce using rule 14 (expression)


state 62

   16 expression: OP_OP KW_DEFVAR IDENTIFIER expression OP_CP .

    $default  reduce using rule 16 (expression)


state 63

    3 expression: OP_OP OP_PLUS expression expression OP_CP .

    $default  reduce using rule 3 (expression)


state 64

    4 expression: OP_OP OP_MINUS expression expression OP_CP .

    $default  reduce using rule 4 (expression)


state 65

    6 expression: OP_OP OP_DIV expression expression OP_CP .

    $default  reduce using rule 6 (expression)


state 66

    5 expression: OP_OP OP_MULT expression expression OP_CP .

    $default  reduce using rule 5 (expression)


state 67

   10 expression: OP_OP KW_DEFFUN IDENTIFIER OP_OP identifier_list OP_CP . expression_list OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression       go to state 6
    expression_list  go to state 76


state 68

   24 identifier_list: identifier_list IDENTIFIER .

    $default  reduce using rule 24 (identifier_list)


state 69

   15 expression: OP_OP KW_FOR OP_OP IDENTIFIER expression expression . OP_CP expression_list OP_CP

    OP_CP  shift, and go to state 77


state 70

   19 expression_boolean: OP_OP KW_AND expression expression . OP_CP

    OP_CP  shift, and go to state 78


state 71

   20 expression_boolean: OP_OP KW_OR expression expression . OP_CP

    OP_CP  shift, and go to state 79


state 72

   21 expression_boolean: OP_OP KW_NOT expression OP_CP .

    $default  reduce using rule 21 (expression_boolean)


state 73

   22 expression_boolean: OP_OP KW_EQUAL expression expression . OP_CP

    OP_CP  shift, and go to state 80


state 74

   23 expression_boolean: OP_OP KW_LESS expression expression . OP_CP

    OP_CP  shift, and go to state 81


state 75

   13 expression: OP_OP KW_IF expression_boolean expression_list expression_list OP_CP .

    $default  reduce using rule 13 (expression)


state 76

   10 expression: OP_OP KW_DEFFUN IDENTIFIER OP_OP identifier_list OP_CP expression_list . OP_CP
   17 expression_list: expression_list . expression

    OP_OP       shift, and go to state 1
    OP_CP       shift, and go to state 82
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 20


state 77

   15 expression: OP_OP KW_FOR OP_OP IDENTIFIER expression expression OP_CP . expression_list OP_CP

    OP_OP       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression       go to state 6
    expression_list  go to state 83


state 78

   19 expression_boolean: OP_OP KW_AND expression expression OP_CP .

    $default  reduce using rule 19 (expression_boolean)


state 79

   20 expression_boolean: OP_OP KW_OR expression expression OP_CP .

    $default  reduce using rule 20 (expression_boolean)


state 80

   22 expression_boolean: OP_OP KW_EQUAL expression expression OP_CP .

    $default  reduce using rule 22 (expression_boolean)


state 81

   23 expression_boolean: OP_OP KW_LESS expression expression OP_CP .

    $default  reduce using rule 23 (expression_boolean)


state 82

   10 expression: OP_OP KW_DEFFUN IDENTIFIER OP_OP identifier_list OP_CP expression_list OP_CP .

    $default  reduce using rule 10 (expression)


state 83

   15 expression: OP_OP KW_FOR OP_OP IDENTIFIER expression expression OP_CP expression_list . OP_CP
   17 expression_list: expression_list . expression

    OP_OP       shift, and go to state 1
    OP_CP       shift, and go to state 84
    IDENTIFIER  shift, and go to state 2
    VALUEF      shift, and go to state 3

    expression  go to state 20


state 84

   15 expression: OP_OP KW_FOR OP_OP IDENTIFIER expression expression OP_CP expression_list OP_CP .

    $default  reduce using rule 15 (expression)
